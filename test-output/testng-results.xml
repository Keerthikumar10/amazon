<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="2" total="6" passed="2">
  <reporter-output>
    <line>
      <![CDATA[version  matching]]>
    </line>
    <line>
      <![CDATA[version  matching]]>
    </line>
    <line>
      <![CDATA[title is matching]]>
    </line>
    <line>
      <![CDATA[title is matching]]>
    </line>
    <line>
      <![CDATA[element found]]>
    </line>
    <line>
      <![CDATA[title not matching]]>
    </line>
    <line>
      <![CDATA[element found]]>
    </line>
    <line>
      <![CDATA[title not matching]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="40939" started-at="2019-08-11T10:02:04Z" finished-at="2019-08-11T10:02:45Z">
    <groups>
    </groups>
    <test name="Test_chrome" duration-ms="33762" started-at="2019-08-11T10:02:04Z" finished-at="2019-08-11T10:02:38Z">
      <class name="scripts.ValidLoginLogout">
        <test-method status="SKIP" signature="openAppn(java.lang.String)[pri:0, instance:scripts.ValidLoginLogout@4cdbe50f]" name="openAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:38Z" finished-at="2019-08-11T15:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="SKIP" signature="login()[pri:0, instance:scripts.ValidLoginLogout@4cdbe50f]" name="login" duration-ms="0" started-at="2019-08-11T15:32:38Z" finished-at="2019-08-11T15:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="SKIP" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.ValidLoginLogout@4cdbe50f]" name="closeAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:38Z" finished-at="2019-08-11T15:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.ValidLoginLogout -->
      <class name="scripts.InvalidLogin">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:scripts.InvalidLogin@45c8e616]" name="openAppn" is-config="true" duration-ms="4287" started-at="2019-08-11T15:32:27Z" finished-at="2019-08-11T15:32:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="FAIL" signature="login()[pri:0, instance:scripts.InvalidLogin@45c8e616]" name="login" duration-ms="6054" started-at="2019-08-11T15:32:32Z" finished-at="2019-08-11T15:32:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at generic.Base_page.verifyTitle(Base_page.java:32)
	at scripts.InvalidLogin.login(InvalidLogin.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[element found]]>
            </line>
            <line>
              <![CDATA[title not matching]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.InvalidLogin@45c8e616]" name="closeAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:38Z" finished-at="2019-08-11T15:32:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=InvalidLogin.login()[pri:0, instance:scripts.InvalidLogin@45c8e616] output=element found]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at generic.ScreenShot.getPhoto(ScreenShot.java:28)
	at generic.Generic_Test.closeAppn(Generic_Test.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:709)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.InvalidLogin -->
      <class name="scripts.VerifyActitimeVersion">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:scripts.VerifyActitimeVersion@1fbc7afb]" name="openAppn" is-config="true" duration-ms="6547" started-at="2019-08-11T15:32:04Z" finished-at="2019-08-11T15:32:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="login()[pri:0, instance:scripts.VerifyActitimeVersion@1fbc7afb]" name="login" duration-ms="15686" started-at="2019-08-11T15:32:11Z" finished-at="2019-08-11T15:32:26Z">
          <reporter-output>
            <line>
              <![CDATA[version  matching]]>
            </line>
            <line>
              <![CDATA[title is matching]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.VerifyActitimeVersion@1fbc7afb]" name="closeAppn" is-config="true" duration-ms="1155" started-at="2019-08-11T15:32:26Z" finished-at="2019-08-11T15:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=VerifyActitimeVersion.login()[pri:0, instance:scripts.VerifyActitimeVersion@1fbc7afb] output=version  matching]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.VerifyActitimeVersion -->
    </test> <!-- Test_chrome -->
    <test name="Test_firefox" duration-ms="40939" started-at="2019-08-11T10:02:04Z" finished-at="2019-08-11T10:02:45Z">
      <class name="scripts.ValidLoginLogout">
        <test-method status="SKIP" signature="login()[pri:0, instance:scripts.ValidLoginLogout@28864e92]" name="login" duration-ms="0" started-at="2019-08-11T15:32:45Z" finished-at="2019-08-11T15:32:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="SKIP" signature="openAppn(java.lang.String)[pri:0, instance:scripts.ValidLoginLogout@28864e92]" name="openAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:45Z" finished-at="2019-08-11T15:32:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="SKIP" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.ValidLoginLogout@28864e92]" name="closeAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:45Z" finished-at="2019-08-11T15:32:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.ValidLoginLogout -->
      <class name="scripts.InvalidLogin">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:scripts.InvalidLogin@721e0f4f]" name="openAppn" is-config="true" duration-ms="7243" started-at="2019-08-11T15:32:32Z" finished-at="2019-08-11T15:32:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="FAIL" signature="login()[pri:0, instance:scripts.InvalidLogin@721e0f4f]" name="login" duration-ms="6036" started-at="2019-08-11T15:32:39Z" finished-at="2019-08-11T15:32:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at generic.Base_page.verifyTitle(Base_page.java:32)
	at scripts.InvalidLogin.login(InvalidLogin.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[element found]]>
            </line>
            <line>
              <![CDATA[title not matching]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.InvalidLogin@721e0f4f]" name="closeAppn" is-config="true" duration-ms="0" started-at="2019-08-11T15:32:45Z" finished-at="2019-08-11T15:32:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=FAILURE method=InvalidLogin.login()[pri:0, instance:scripts.InvalidLogin@721e0f4f] output=element found]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at generic.ScreenShot.getPhoto(ScreenShot.java:28)
	at generic.Generic_Test.closeAppn(Generic_Test.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:709)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.InvalidLogin -->
      <class name="scripts.VerifyActitimeVersion">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:scripts.VerifyActitimeVersion@546a03af]" name="openAppn" is-config="true" duration-ms="9978" started-at="2019-08-11T15:32:04Z" finished-at="2019-08-11T15:32:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="login()[pri:0, instance:scripts.VerifyActitimeVersion@546a03af]" name="login" duration-ms="12236" started-at="2019-08-11T15:32:14Z" finished-at="2019-08-11T15:32:26Z">
          <reporter-output>
            <line>
              <![CDATA[version  matching]]>
            </line>
            <line>
              <![CDATA[title is matching]]>
            </line>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:scripts.VerifyActitimeVersion@546a03af]" name="closeAppn" is-config="true" duration-ms="5420" started-at="2019-08-11T15:32:26Z" finished-at="2019-08-11T15:32:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=VerifyActitimeVersion.login()[pri:0, instance:scripts.VerifyActitimeVersion@546a03af] output=version  matching]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- scripts.VerifyActitimeVersion -->
    </test> <!-- Test_firefox -->
  </suite> <!-- Suite -->
</testng-results>
